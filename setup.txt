pip insYou need to get set up with two services in order to use this template.  If you are in a group, you can have one 
group member do this.

### Part one: Python Packagess ###

This assumes you have: 
1) installed Git (https://github.com/git-guides/install-git)
    Git NOT github desktop
2) cloned the Capstone Flask Template (Which is what you are looking at now.)
3) Installed Anaconda - https://www.anaconda.com/products/individual

Now you need to install all of python packages.  To do this, open the terminal in Visual Studio Code. If it is not
already open then go to the Terminal menu and choose "New Terminal". If the terminal is set to "powershell" pull down the 
terminal menu and choose "select default shell" then pick "Command Prompt" from the menu that opens at the top of your screen. 
Then click the trash can in the terminal window pane and then open a new terminal. Now type the following commands:

# This command creates a new python "environment" which will hold all the packages
# you need for this project. The name of the environment in the command below is "capstone"
# You can change that to what ever you want.

conda create --name capstone 

# This command activates your environment. If you did not use "capstone" make sure to use the name you did use.
# Once the environment is active you will see it in perenthesis in front of the command line in the terminal

conda activate capstone

# This command will install the tool you need to install Python Packages. 
# It may already be installed.

conda install pip

# This command will install all the packages that are listed in the "requirements.txt" file

pip install -r requirements.txt

# if you are on a computer that you do not have administrative access you may need to do: pip install --user -r requirements.txt

You should see several packages being downloaded and installed.
You can check to see if it worked by clicking on the main.py to the left and then clicking the run button (triangle)
at the top right of the screen.  You should get an error about "pymongo". We will address that in the next step.

### Step Two: hook up your database ###

The next is mongodb.com where you will create your database and all the data from your site will be stored.
1) I will describe the basic process to get an account at mongodb.com and find the 
    code you need to include in your app.
2) Sign up for an account at mongodb.com.  Click the "sign up" and NOT the "Try it Free" link.  This way you can
    create a new account with your google credentials.
3) You then going to get a free database "cluster".  Follow the instructions to create a new FREE cluster. You will be asked 
    which service you want to use (Google, AWS or Azure). Look at each to find a "Free Tier" that is close to us.
4) Click the connect button and then add 0.0.0.0 as the whitelist IP. This will make it possible to administer your 
    database from anywhere.  Also add and new database admin and password.  This password will be viwable by a lot of people 
    in class so don't use one that you already use for other important things.  Something simple like Admin and BullDogz.
5) Now you need to choose a connection method.  Click "Connect Your Application" and then configure the screen to give you the 
    code for Python 3.6 and above and click "Copy"
6) Copy the string that looks something like this:
    mongodb+srv://<dbuser>:<password>@cluster0-8m0v1.gcp.mongodb.net/<dbname>?retryWrites=true&w=majority   
    and now you need to paste it in to your app. 
7) Go to the secrets-ChangeMe.py file and find MONGO_DB_NAME and MONGO_HOST keys. You need to add your values. Take a 
    look at the placeholder text to be sure you are adding the right strings. Then, change the file name to:
        secrets.py

### Step Three: Set up an email account ###
This step is optional.  You only need it if you want your users to be able to recover their 
password via email if they forget. You should NOT use an email you currently use because you will need
to write the password in a place that is not 100% secure.  So, go to gmail.com and create a new email account.
Then add the address and the password the secrets file that is in the utils folder. 

You should be ready to go!

Then click on the main.py file. You might get a popup window asking you to install pythin. Do that. Then in the top left of 
your screen you should see a green triangle. Click it to run the app. Weeeeeeeeeeeee!!!!